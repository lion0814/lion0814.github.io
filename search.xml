<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>css水平垂直居中</title>
      <link href="2021/012636538.html"/>
      <url>2021/012636538.html</url>
      
        <content type="html"><![CDATA[<h1 id="css水平居中-垂直居中总结"><a href="#css水平居中-垂直居中总结" class="headerlink" title="css水平居中+垂直居中总结"></a>css水平居中+垂直居中总结</h1><h3 id="一-水平居中"><a href="#一-水平居中" class="headerlink" title="一.水平居中"></a>一.水平居中</h3><h5 id="1-行内元素"><a href="#1-行内元素" class="headerlink" title="1.行内元素"></a>1.行内元素</h5><p>text-align:center;运用在块级元素中,使其中包含的行内元素水平居中对齐</p><p>子元素是行内元素:看父元素是不是块级元素,如果是,直接给父元素设置</p><pre class=" language-css"><code class="language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre><p>如果父元素不是块级元素,将父元素设置为块级元素,再水平居中</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre><h5 id="2-块级元素"><a href="#2-块级元素" class="headerlink" title="2.块级元素"></a>2.块级元素</h5><p>方法一:(分定宽度和不定宽度两种情况)</p><p>设定宽度时:需要谁居中,给谁加,使盒子自己居中</p><pre class=" language-css"><code class="language-css"><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> auto<span class="token punctuation">;</span></code></pre><p>子元素不定宽度时:默认子元素宽度和父元素一样,设置子元素为行内块/行内元素</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span></code></pre><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span></code></pre><p>同时给父元素设置</p><pre class=" language-css"><code class="language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre><p>方法二:使用定位属性(不用管定不定宽度)</p><p>子元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></code></pre><p>方法三:使用flex布局</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre><h3 id="二-垂直居中"><a href="#二-垂直居中" class="headerlink" title="二:垂直居中"></a>二:垂直居中</h3><h5 id="1-行内元素-1"><a href="#1-行内元素-1" class="headerlink" title="1.行内元素"></a>1.行内元素</h5><p>单行的行内元素:</p><p>只需要设置单行行内元素的”行高等于盒子的高”即可</p><p>line-height 和 height的值一样</p><p>多行的行内元素:</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>table-cell<span class="token punctuation">;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span>middle<span class="token punctuation">;</span></code></pre><h5 id="2-块级元素-1"><a href="#2-块级元素-1" class="headerlink" title="2.块级元素"></a>2.块级元素</h5><p>方法一:使用定位属性</p><p>子元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></code></pre><p>方法二:使用flex布局</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre><p>方法三:</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span></code></pre><p>子元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">align-self</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre><h3 id="三-水平垂直居中"><a href="#三-水平垂直居中" class="headerlink" title="三.水平垂直居中"></a>三.水平垂直居中</h3><p>已知宽度和高度的元素:</p><p>方法一:</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></code></pre><p>子元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span></code></pre><p>方法二:</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></code></pre><p>子元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span><span class="token function">-</span><span class="token punctuation">(</span>子元素宽度的一半<span class="token punctuation">)</span>px<span class="token punctuation">;</span><span class="token property">margin-top</span><span class="token punctuation">:</span><span class="token function">-</span><span class="token punctuation">(</span>子元素高度的一半<span class="token punctuation">)</span>px<span class="token punctuation">;</span></code></pre><p>未知高度和宽度的元素:</p><p>方法一:定位属性</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></code></pre><p>子元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>方法二:flex布局</p><p>父元素:</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Typora写博客</title>
      <link href="2021/012659448.html"/>
      <url>2021/012659448.html</url>
      
        <content type="html"><![CDATA[<p>Typora是一款轻便简洁的Markdown编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。</p><h3 id="大纲-文件侧边栏"><a href="#大纲-文件侧边栏" class="headerlink" title="大纲/文件侧边栏"></a>大纲/文件侧边栏</h3><p>Typora 会根据你 Markdown 标记的 H1、H2、H3…… 各级标题为你呈现一个大纲</p><p>快捷键是Ctrl + Shift + L</p><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><p><strong>加粗:Ctrl + B</strong></p><p><em>斜体: Ctrl + I</em></p><p><u>下划线: Ctrl + U</u></p><p><del>删除线:Alt+Shift+5</del></p><p>代码:Crtl + Shift + `</p><p><code>hello</code></p><p><a href="">插入链接:Ctrl + K</a></p><p>1-6级标题:Ctrl + 1-6,类推</p><p>插入表格Ctrl + T</p><p>插入图片:Ctrl + Shift + I</p><p><img src="https://gitee.com/lion0814/picgo/raw/master/comment_bg.png"></p><h3 id="图片自动上传到图床"><a href="#图片自动上传到图床" class="headerlink" title="图片自动上传到图床"></a>图片自动上传到图床</h3><p>注意插入图片最好配置一下图片自动上传到图床</p><p><strong>问题说明</strong>：平常写博客或者做笔记等，都有要<strong>插入图片</strong>的时候，由于Typora 的图片只能保存在本地，变动一下文件的图片就会访问不到失效的问题，所以需要<strong>图床</strong>的存在。</p><p>图床工具使用<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a>+码云</p><p><img src="https://gitee.com/lion0814/picgo/raw/master/image-20210126154922386.png" alt="image-20210126154922386"></p><p>在插件设置搜索gitee,下载插件。注:必须有node.js才能安装插件</p><p><img src="https://gitee.com/lion0814/picgo/raw/master/image-20210126155132694.png" alt="image-20210126155132694"></p><p>创建gitee码云图床库</p><p>必须开源,勾选Readme文件可以自动创建master分支</p><p>创建仓库之后配置PicGo,在Gitee图床填写相关信息</p><p><img src="https://gitee.com/lion0814/picgo/raw/master/image-20210126155753564.png" alt="image-20210126155753564"></p><p>token可在码云-&gt;设置-&gt;私人令牌生成</p><p>配置Typora,点击文件-&gt;偏好设置-&gt;图像</p><p><img src="https://gitee.com/lion0814/picgo/raw/master/img/image-20210126160541622.png" alt="image-20210126160541622"></p><p>如果失败的话,看PicGo设置的Server,改成默认的端口36677,重新测试</p><p>如果还有其他报错,可在PicGo设置查看日志文件</p><h3 id="打字机模式和专注模式"><a href="#打字机模式和专注模式" class="headerlink" title="打字机模式和专注模式"></a>打字机模式和专注模式</h3><p>可在视图中选择是否勾选使用</p><p>打字机模式会使你编辑的这一行处于正中心</p><p>专注模式除了你编辑的这一行其他全部变浅灰色</p><h3 id="emoji表情"><a href="#emoji表情" class="headerlink" title="emoji表情"></a>emoji表情</h3><p>在Typora中,可以使用:emoji:的形式打出表情进行选择</p><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>    <span class="github-emoji"><span>😂</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>行内代码：用 `` 或 ```` 括起代码， 代码会以主题中设置的样式出现在行内，但不会实现代码高亮。</p><p>代码块:输入```之后输入语言名,换行,开始写代码,Typora会实现代码高亮,日常的编程语言代码块都可以很好的支持,也可以右键,插入代码块</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello World'</span><span class="token punctuation">)</span></code></pre><h3 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h3><p>右键插入表格,快捷键(Ctrl+T),输入行数和列数即可</p><table><thead><tr><th align="left">T1</th><th align="left">t2</th><th align="left">T3</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">3</td><td align="left">5</td></tr><tr><td align="left">2</td><td align="left">hello</td><td align="left">拜拜</td></tr></tbody></table><h3 id="源代码模式和开发者工具"><a href="#源代码模式和开发者工具" class="headerlink" title="源代码模式和开发者工具"></a>源代码模式和开发者工具</h3><p>点击Typora左下角的&lt;/&gt;可切换源代码模式</p><p>快捷键Shift + F12可以切换开发者工具</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>one</title>
      <link href="2021/012622236.html"/>
      <url>2021/012622236.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/012216107.html"/>
      <url>2021/012216107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
